
MPA FORMAT

 1 MOTIONPATH
 2 FXC 0 300.00 200.00 0.00
 3 MAG 0.00 1.00 1.00
 4 FXL -500.00 1000.00 0.00
 5 CLK 0.05
 6
 7 OBJ
 8 VIR
 9 TIM 0.00 10.00
10 INP 0.00 150.00 -750.00
11 INA 0 0 0
12 INS 0
13 SC1 1 0.00 120.00 0.00 8.50 2.00 255 255 255
14 SB1 1 500.00 2 2000.00 3
15 SO1 0.30 -0.30 -9.00
16 SC2 4 0.00 0.10 9.50 9.50 0.00 255 255 255
17 SB2 1 500.00 2 2000.00 3
18 SO2 0.00 0.00 -1.00
19 PTH
20 TIM 10.00
21 FWD 150.00
22 HPB 0 0 0
23 EON
24 EOO
25
26 END


1行 MOTIONPATH
  MPAファイルの先頭に必ず書きます。

2〜3行
  固定点カメラを定義しています。カメラの記述については、下を参照して
  ください。

4行
  固定点ライトを定義しています。

5行目
  アニメーション計算の単位時間を指定します。(秒) ただ、現バージョンで
  は0.05に固定です。(それ以外の値だと多分動かない)

7〜24行
  ひとつのオブジェクトを定義しています。オブジェクトの定義の詳細につい
  ては下を参照してください。

8〜18行
  オブジェクト固有のパラメータの定義です。詳細は下を参照してください。

19〜23行
  ノードを定義しています。ノードの定義の詳細については下を参照してくださ
  い。

26行 END
  MPAファイルの最後に必ず書きます。この後に書いたものは無視します。


////////////////////////////////////////////////////////////

・CAMERAの記述
カメラには、次の3通りがあります。
  ・固定点カメラ
    FXC <OBJECT-ID> <X> <Y> <Z>
    位置固定で常に指定のオブジェクトを画面中心に捕らえるようなカメラ
    です。
  ・オンボードカメラ
    CAM <OBJECT-ID>
    指定したオブジェクトと同じ位置・姿勢を維持するカメラです。
  ・スタティックカメラ
    STC <X> <Y> <Z> <H> <P> <B>
    指定した位置・姿勢で動かないカメラを指定します。姿勢は <H> <P> <B>
    の角度で指定します。姿勢については、下の章を参照してください。

また、カメラの拡大率を指定することができます。時間後とに拡大率を変化
させることも可能で、それは次のように書きます。

  MAG <TIME> <MAGX> <MAGY>

時刻は秒単位です。縦横の拡大率を独立して<MAGX><MAGY>と指定できるので、
縦に長くしたり横に長くしたりすることも可能です。(多分 ^_^; まだ縦横別
の拡大率でちゃんと動くか実験してないんですけど ^_^;)

例えば、固定点カメラ(原点上空高度1000m)で、オブジェクト3を追従するカメラ
で拡大率を普通の10倍にする場合、

   FXC 3 0 1000 0
   MAG 0 10 10

のように書きます。


////////////////////////////////////////////////////////////

・LIGHTについて
ライトには次の2通りがあります。
  ・固定点ライト
    FXL <X> <Y> <Z>
    位置固定の光源です。
  ・オンボードライト
    LIG <OBJECT-ID>
    オブジェクトと一緒に動く光源です。

////////////////////////////////////////////////////////////

・OBJECTについて
オブジェクトのパラメータは、OBJ〜EOOの間に記述します。上から書いた
順にオブジェクトID 0,1,2....になります。

オブジェクトには次のパラメータを指定することができます。

  ・形状
    VIR
      バーチャルオブジェクト(不可視オブジェクト)にします。この指定
      をしたオブジェクトは存在してますが、見えません。オンボードカ
      メラやオンボードライトに使うと便利です。また、複雑な動きの基
      準点として使うこともできます。
    SHP <FILENAME>
      形状を指定します。ファイル名には、.DNM形式または.SRF形式を指
      定することができます。.DNMと.SRFはアスキーの「3Dグラフィックス
      開発キット Blue Impulse」のCD-ROMにたくさん出てますが、手元に
      もっとたくさん作ったのがあるので、ご一報いただければ、T-2,T-4,
      F-15,F-4EJのほかにも、C130とかMU-2とかU-125とかUH-60も用意でき
      ます。なお、DNMはアニメーションを指定することができます。
      形状ファイルはMPAファイルと同じディレクトリまたは、MPAファイル
      よりも下のディレクトリに置いた方が安全です。また、絶対パスでは
      指定しないで、相対パスを使った方が安全です。
    TIM <STARTTIME> <ENDTIME>
      オブジェクトが存在する時間を指定します。秒単位で指定します。
    INP <X> <Y> <Z>
      初期位置を指定します。
    INA <H> <P> <B>
      初期姿勢を指定します。
    INS <STATE>
      初期状態を指定します。現バージョンでは0にしておいてください。
    SCx,SBx,SOx
      スモーク形状の指定です。とりあえず、このままにしておいてくだ
      さい。xにはスモークナンバーを入れることができて、1〜4の数字を
      指定できます。4個のスモークジェネレータを持つことができると
      考えてください。とりあえず、サンプル通りに入力すると、
      スモーク1番が「いったんもめんスモーク」スモーク2番がベーパー
      (T-4サイズ)になります。
    SIx <ONTIME> <OFFTIME>
      スモークの時間を指定します。最大16個の時間を指定できるので、
      16回までオン/オフすることができます。サンプルの通りのスモーク
      形状を指定した場合、SI0がいったんもめん、SI1がベーパーになり
      ます。
    PTH〜EON
      ノードを指定します。上から書いた順に、ノード0,1,2,....となり
      ます。詳細は次の章に書きます。


////////////////////////////////////////////////////////////

・ノードについて
  ノードは、オブジェクトの記述の中で PTH〜EONの間に記述します。それ
  ぞれのノードでは、次のパラメータを指定します。

    ・時間
      TIM <TIME>
        そのノードが占める時間を指定します。(秒)
    ・位置の変化
      FWD <VELOCITY>
        指定したVELOCITY(m/秒)でまっすぐ前(横滑角,迎角0の方向)に進み
        ます。一番簡単な移動です。姿勢の変化があると、それに従って
        曲線を描いて移動します。
      ENG <VELOCITY>
        エネルギー保存の法則に従って速度が変化しながら移動します。ノ
        ード開始時の速度を<VELOCITY>に指定します。例えば、宙返りのと
        き、このノードを使うと円じゃなくて、宙返り特有の曲線に近くな
        ります。
      ACC <VELOCITY1> <VELOCITY2>
        指定したスピードVELOCITY1(m/秒)〜VELOCITY2(m/秒)に速度を変化
        させながら移動します。姿勢の変化があると、それに従って曲線を
        描きます。
      PRC <X> <Y> <Z>
        オブジェクトに対して一定の相対ベクトル(m/秒)を維持するように
        飛びます。例えば、
          PRC 0 -10 100
        のように指定した場合、迎え角(5度ぐらい?ちゃんと計算してない
        ですけど)を維持して飛びます。また、
          PRC -10 0 100
        のように指定した場合、横滑り角(5度ぐらい?)を維持しながら飛び
        ます。姿勢の変化があると、それに従って曲線を描きます。
      MTL <X> <Y> <Z>
        ノード開始時の位置・姿勢に対して、相対的にX,Y,Zの位置にまっす
        ぐ移動します。相対位置は、ノード開始時の姿勢にも影響を受ける
        ので、例えば、
          MTL 0 10 0
        のように指定したとしても(まっすぐ上に移動)、例えば、バンクが
        90度ついていると、絶対座標系では水平に移動します。
      ABS <X> <Y> <Z>
        MTLがオブジェクトの相対位置に移動するのに対して、ABSは絶対座標
        系で移動します。
      RAW
        他の移動の種類と違って、オブジェクトの位置と姿勢を直接指定しま
        す。RAWに続けて、
          RAW
          <Number of segments>
          <X> <Y> <Z> <H> <P> <B> <TIME-LENGTH>
          <X> <Y> <Z> <H> <P> <B> <TIME-LENGTH>
          <X> <Y> <Z> <H> <P> <B> <TIME-LENGTH>
          <X> <Y> <Z> <H> <P> <B> <TIME-LENGTH>
          <X> <Y> <Z> <H> <P> <B> <TIME-LENGTH>
                :
        のように書きます。<TIME-LENGTH>は、ひとつのセグメントが占める時
        間を秒で指定します。ノード開始時からの時間ではないので注意が必要
        です。また、<X> <Y> <Z> <H> <P> <B> がどのような値であっても、
        ノードの開始位置・姿勢からはじまるように補正してしまいます。だか
        ら、RAWで指定した通りの位置になってほしい場合は、ノード開始位置
        が最初のセグメントの位置と同じように書きます。
        例えば、最初のノードが RAW の場合は、オブジェクトの初期位置(INIP,
        INIA)を最初のセグメントと同じに設定すればOKです。
      KRP <OBJECT-ID>
        指定したオブジェクトに対する相対位置を一定に維持しながら移動し
        ます。
      PRL <OBJECT-ID>
        指定したオブジェクトと平行に移動します。
      CHS <OBJECT-ID>
        指定したオブジェクトに対する相対位置を一定に維持しながらい移動
        しますが、少し遅れが発生します。なお、オブジェクト同士の距離が
        大きい場合は遅れが大きくなります。(編隊でループに入るときの不自
        然さを解消するためだけに作った)
      MTR <OBJECT-ID> <X> <Y> <Z>
        ノード終了時に、指定したオブジェクトに対する相対位置が<X> <Y> <Z>
        になるように移動します。機動しながらの編隊組替えとかはこれで書
        けます。他に使い道がないのが難点といえば難点なんですがね(^_^;)
      MTS <OBJECT-ID> <X> <Y> <Z>
        MTRとほとんど同じですが、ノードの最後がスムーズな移動になりま
        す。
      MSR
        MTRとほとんど同じですが、ノードの最初と最後がスムーズな移動に
        なります。

    ・姿勢の変化(移動の種類に RAW を指定した場合は無視します)
      HPB <DH> <DP> <DB>
        姿勢の変化を直接指定します。ノードの開始時の姿勢が h,p,b と
        すると、ノードの最後に、 h+DH, p+DP, b+DB の姿勢に変化します。
      PYR <DH> <DP> <DB>
        姿勢の変化を指定しますが、PYRの場合は、ノード開始時の姿勢に
        対して相対的な回転を指定します。例えば、ノード開始時の姿勢が
        45度バンクで、
          PYR 0 360 0
        と指定した場合、45度傾いたループを描きます。
      KRA <OBJECT-ID>
        指定オブジェクトに対する相対的な姿勢を維持します。
      FCS <OBJECT-ID>
        指定したオブジェクトに常に機首を向けます。オンボードカメラに
        利用すると便利です。(それ以外の利用価値はあんまりないです ^_^;)

    ・姿勢の変化の補正
      RSB
        回転をできるだけスムーズにするように努力します。

////////////////////////////////////////////////////////////

・座標系について

座標系は次の通りです。添付した Coordsys.gif も参照してください。
Headingは飛行機のヘディングと逆なので注意してください。

なお、角度は、65536で一周です。変換レートは次の通りです。

    float rad;      // Radian
    float deg;      // Degree
    long mpa;       // MPA (Blue Impulse 3DG-SDK) Angle

    mpa=(long)(rad*32768.0F/3.14159F);
    rad=((float)mpa)*3.14159F/32768.0F;
    mpa=(long)(deg*32768.0F/180.0F);
    deg=((float)mpa)*180.0F/32768.0F;



  上から見た図

                Z
                ↑
      Heading ←｜
                ｜
          −−−＋−−→X
                ｜
                ｜

  右から見た図

                Y
                ↑
                ｜   Pitch
                ｜    ↑
          −−−＋−−→Z
                ｜
                ｜

  後ろから見た図

                Z
                ↑
          Bank←｜
                ｜
          −−−＋−−→X
                ｜
                ｜





